From: Bastian Germann <bastiangermann@fishpost.de>
Date: Thu, 23 Jul 2020 20:41:52 +0200
Subject: Build with libedit instead of readline
---
--- a/configure.ac
+++ b/configure.ac
@@ -168,7 +168,7 @@
 if test "x$with_readline" = xyes; then
     	OLD_LIBS="$LIBS"
     	LIBS=""
-    	AC_CHECK_LIB(readline, readline, ,
+    	AC_CHECK_LIB(edit, readline, ,
 	    	AC_MSG_WARN(GNU Readline could not be found which is required \
 for the --with-readline
 	    	)
@@ -321,7 +321,7 @@
 fi
 
 if test "x$with_readline" = xyes; then
-    	AC_CHECK_HEADERS(readline/readline.h readline/history.h, ,
+    	AC_CHECK_HEADERS(editline/readline.h editline/history.h, ,
 		AC_MSG_WARN(The headers for GNU Readline could not be found which \
 are required for the --with-readline option.
 		)
@@ -396,7 +396,7 @@
 
   	AC_TRY_COMPILE([
 #include <stdio.h> 
-#include <readline/readline.h>
+#include <editline/readline.h>
 	], ,[
 		redundant_decls=yes; 
 		AC_MSG_RESULT(yes)
--- a/include/misc/ui.h
+++ b/include/misc/ui.h
@@ -15,7 +15,7 @@
 extern void misc_print_wrap(void *stream, char *text);
 extern char *misc_readline(char *prompt, void *stream);
 
-#if defined(HAVE_LIBREADLINE) && defined(HAVE_READLINE_READLINE_H)
+#if defined(HAVE_LIBEDIT) && defined(HAVE_EDITLINE_READLINE_H)
 extern aal_list_t *misc_get_variant(void);
 extern void misc_set_variant(aal_list_t *list);
 #endif
--- a/libmisc/exception.c
+++ b/libmisc/exception.c
@@ -144,7 +144,7 @@
 aal_exception_option_t misc_exception_handler(
 	aal_exception_t *exception)		/* exception to be processed */
 {
-#if defined(HAVE_LIBREADLINE) && defined(HAVE_READLINE_READLINE_H)
+#if defined(HAVE_LIBEDIT) && defined(HAVE_EDITLINE_READLINE_H)
 	int i;
 	aal_list_t *variant = NULL;
 #endif
@@ -172,7 +172,7 @@
 	if (misc_exception_option_count(exception->options, 0) == 1)
 		return exception->options;
 
-#if defined(HAVE_LIBREADLINE) && defined(HAVE_READLINE_READLINE_H)
+#if defined(HAVE_LIBEDIT) && defined(HAVE_EDITLINE_READLINE_READLINE_H)
 	for (i = 1; i < aal_log2(EXCEPTION_OPT_LAST); i++) {
 		if ((1 << i) & exception->options) {
 			char *name = aal_exception_option_name(1 << i);
@@ -188,7 +188,7 @@
 		opt = misc_exception_prompt(exception->options, stream);
 	} while (opt == EXCEPTION_OPT_UNHANDLED);
 	
-#if defined(HAVE_LIBREADLINE) && defined(HAVE_READLINE_READLINE_H)
+#if defined(HAVE_LIBEDIT) && defined(HAVE_EDITLINE_READLINE_H)
 	aal_list_free(variant, NULL, NULL);
 	misc_set_variant(NULL);
 #endif
--- a/libmisc/ui.c
+++ b/libmisc/ui.c
@@ -12,14 +12,14 @@
 #  include <config.h>
 #endif
 
-#if defined(HAVE_LIBREADLINE) && defined(HAVE_READLINE_READLINE_H)
+#if defined(HAVE_LIBEDIT) && defined(HAVE_EDITLINE_READLINE_H)
 
 #ifndef HAVE_RL_COMPLETION_MATCHES
 #  define OLD_READLINE (1)
 #endif
 
-#include <readline/readline.h>
-#include <readline/history.h>
+#include <editline/readline.h>
+#include <editline/history.h>
 
 #ifndef HAVE_RL_COMPLETION_MATCHES
 #  define rl_completion_matches completion_matches
@@ -31,7 +31,7 @@
 
 static aal_list_t *variant = NULL;
 
-#endif /* defined(HAVE_LIBREADLINE) && defined(HAVE_READLINE_READLINE_H) */
+#endif /* defined(HAVE_LIBEDIT) && defined(HAVE_EDITLINE_READLINE_H) */
 
 #include <misc/misc.h>
 
@@ -48,7 +48,7 @@
 	aal_assert("umka-1021", prompt != NULL);
 	aal_assert("umka-1536", stream != NULL);
     
-#if defined(HAVE_LIBREADLINE) && defined(HAVE_READLINE_READLINE_H)
+#if defined(HAVE_LIBEDIT) && defined(HAVE_EDITLINE_READLINE_H)
 	rl_instream = stdin;
 	rl_outstream = stream;
 	
@@ -131,7 +131,7 @@
 	}
 }
 
-#if defined(HAVE_LIBREADLINE) && defined(HAVE_READLINE_READLINE_H)
+#if defined(HAVE_LIBEDIT) && defined(HAVE_EDITLINE_READLINE_H)
 static char *misc_generator(char *text, int state) {
 	char *opt;
 	char s[80], s1[80];
@@ -257,10 +257,10 @@
 
 static void _init(void) {
 	
-#if defined(HAVE_LIBREADLINE) && defined(HAVE_READLINE_READLINE_H)
+#if defined(HAVE_LIBEDIT) && defined(HAVE_EDITLINE_READLINE_H)
 	rl_initialize();
 	rl_attempted_completion_function = 
-		(CPPFunction *)misc_complete;
+		(rl_completion_func_t *)misc_complete;
 #endif
     
 	aal_exception_set_handler(misc_exception_handler);
